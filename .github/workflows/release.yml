name: 'Release'

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
            artifact_name: 'dmg/dxup_0.0.1_aarch64.dmg'
            asset_name: 'dxup-macos-aarch64.dmg'
          - platform: 'ubuntu-20.04'
            args: ''
            artifact_name: 'deb/dxup_0.0.1_amd64.deb'
            asset_name: 'dxup-linux-amd64.deb'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Cache asdf
        id: cache-asdf
        uses: actions/cache@v4
        env:
          cache-name: cache-asdf
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/.tool-versions') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache node modules
        id: cache-bun
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.bun
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache rust
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install system dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
        # sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf for tauri v2

      - name: Install asdf & tools
        uses: asdf-vm/actions/install@v3

      - name: Install frontend dependencies
        run: bun install --frozen-lockfile

      - name: Build and bundle the app
        run: bun run scripts/build.ts

      - name: Upload bundles to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: src-tauri/target/release/bundle/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
          overwrite: true
